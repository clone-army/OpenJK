/* Public Enums rejigged for MBII Relevence */

typedef enum {
	MB_STAT_HEALTH,
	MB_STAT_HOLDABLE_ITEM,
	MB_STAT_HOLDABLE_ITEMS,
	MB_STAT_PERSISTANT_POWERUP,
	MB_STAT_WEAPONS = 4,					// 16 bit fields
	MB_STAT_ARMOR,
	MB_STAT_DEAD_YAW,					// look this direction when dead (FIXME: get rid of?)
	MB_STAT_CLIENTS_READY,				// bit mask of clients wishing to exit the intermission (FIXME: configstring?)
	MB_STAT_MAX_HEALTH,					// health / armor limit, changable by handicap
	MB_STAT_UNKNOWN_1,
	MB_STAT_UNKNOWN_2,
	MB_STAT_UNKNOWN_3,
	MB_STAT_UNKNOWN_4,
	MB_STAT_UNKNOWN_5,
	MB_STAT_UNKNOWN_6,
	MB_STAT_BLOBS_DARTS

} stats_mbii_t;

typedef enum {
	MB_PW_NONE_0,
	MB_PW_FIRE,
	MB_PW_FREEZE,
	MB_PW_NONE_3,
	MB_PW_FLAG_RED,
	MB_PW_FLAG_BLUE,
	MB_PW_FLAG_WHITE,
	MB_PW_NONE_7,
	MB_PW_PHASING,
	MB_PW_NONE_9,
	MB_PW_NONE_10,
	MB_PW_CLOAKED,
	MB_PW_INVINSIBLE,
} powerups_mbii_t;


typedef enum {
	MB_SS_NONE,
	MB_SS_BLUE,
	MB_SS_YELLOW,
	MB_SS_RED,
	MB_SS_PURPLE,
	MB_SS_CYAN,
	MB_SS_DUEL,
	MB_SS_STAFF
} saber_style_mbii_t;

// MBII FORCE POWERS

typedef enum {
	MB_FORCE_HEAL,
	MB_FORCE_JUMP,
	MB_FORCE_SPEED,
	MB_FORCE_PUSH,
	MB_FORCE_PULL,
	MB_FORCE_MIND_TRICK,
	MB_FORCE_GRIP,
	MB_FORCE_LIGHTNING,
	MB_FORCE_DESTRUCTION,
	MB_FORCE_PROTECT,
	MB_FORCE_ABSORB,
	MB_FORCE_TEAM_HEAL,
	MB_FORCE_TEAM_ENERGISE,
	MB_FORCE_DRAIN,
	MB_FORCE_SENSE,
	MB_FORCE_SABER_OFFENCE,
	MB_FORCE_SABER_DEFENCE,
	MB_FORCE_SABER_THROW

} force_mbii_t;



// MBII Weapons
typedef enum {
	MB_NOTHING,
	MB_PROJECTILE_RIFLE,
	MB_MELEE,
	MB_LIGHTSABER,
	MB_PISTOL,
	MB_E11,
	MB_DISRUPTOR,
	MB_BOWCASTER,
	MB_DC15,
	MB_DC17_PISTOL,
	MB_DLT,
	MB_ROCKET_LAUNCHER,
	MB_FRAG_GREN,
	MB_PULSE_GREN,
	MB_T21,
	MB_ARM_BLASTER,
	MB_WESTAR34,
	MB_WEAPON_MAX
} weapon_mbii_t;


// MBII AMMO
typedef enum {
	MB_AMMO_BOWCASTER_DISRUPTOR,
	MB_AMMO_DC15_DLT20_ARM_BLASTER,
	MB_AMMO_ROCKETS,
	MB_AMMO_UNKNOWN_1,
	MB_AMMO_FRAG_GRENADES,
	MB_AMMO_PULSE_GRENADES,
	MB_AMMO_T21_AMMO,
	MB_AMMO_PISTOL,
	MB_AMMO_WELSTAR34,
	MB_AMMO_DC17_PISTOL,
	MB_AMMO_PROJECTILE_RIFLE,
	MB_AMMO_UNKNOWN_4,
	MB_AMMO_UNKNOWN_5,
	MB_AMMO_UNKNOWN_6,
	MB_AMMO_UNKNOWN_7,
	MB_AMMO_UNKNOWN_8,
	MB_AMMO_UNKNOWN_9,
	MB_AMMO_MAX
} ammo_mbii_t;


